
#Application Properties
spring:
  application:
    name: Identity-Provider

  profiles:
    active: dev

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    baseline-on-migrate: true

  mail:
    host: smtp.gmail.com
    port: 465
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: false
            required: true

linkedin:
  api:
    client-id: ${LINKEDIN_CLIENT_ID}
    client-secret: ${LINKEDIN_CLIENT_SECRET}
    scope: openid profile email
    redirect-uri: ${LINKEDIN_REDIRECT_URI}
    authorization-uri: https://www.linkedin.com/oauth/v2/authorization
    token-uri: https://www.linkedin.com/oauth/v2/accessToken
    user-info-uri: https://api.linkedin.com/v2/userinfo

jwt:
  access-token:
    expiration-ms: 900000 # 15 minutes
  refresh-token:
    expiration-ms: 604800000 # 7 days

frontend:
  redirect-url: ${FRONTEND_REDIRECT_URL}
  login-widget: ${FRONTEND_LOGIN_WIDGET}

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG

server:
  port: 8080

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://127.0.0.1:5500,http://localhost:3000}
